<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>EricZeng</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://eericzeng.github.io/"/>
  <updated>2019-07-15T11:58:04.103Z</updated>
  <id>http://eericzeng.github.io/</id>
  
  <author>
    <name>Eric Zeng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo添加阅读统计</title>
    <link href="http://eericzeng.github.io/2019/07/15/hexo%E6%B7%BB%E5%8A%A0%E9%98%85%E8%AF%BB%E7%BB%9F%E8%AE%A1/"/>
    <id>http://eericzeng.github.io/2019/07/15/hexo添加阅读统计/</id>
    <published>2019-07-15T04:29:48.000Z</published>
    <updated>2019-07-15T11:58:04.103Z</updated>
    
    <content type="html"><![CDATA[<h2 id="版本说明"><a href="#版本说明" class="headerlink" title="版本说明"></a>版本说明</h2><ul><li>hexo v3.9.0</li><li>hexo-theme-next v7.1.2</li></ul><h2 id="不蒜子"><a href="#不蒜子" class="headerlink" title="不蒜子"></a>不蒜子</h2><p>NexT内置了leancloud、firebase、busuanzi三种访客统计插件，前两种需要到官网注册获取网站颁发的appKey，相对麻烦，有兴趣的请访问<a href="https://leancloud.cn" target="_blank" rel="noopener">leancloud</a>、<a href="https://console.firebase.google.com/u/0/" target="_blank" rel="noopener">firebase</a>。而不蒜子配置只需要将false改为true即可：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>更多用法请参考官网说明<a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="noopener">不蒜子官网</a>。</p><h2 id="百度统计"><a href="#百度统计" class="headerlink" title="百度统计"></a>百度统计</h2><p>起初我以为阅读统计是通过百度统计进行计数的，后来发现百度统计、GA等只是分析工具，并不会把统计信息显示在博客页面上，所以是否需要百度统计看个人需求。打开<a href="https://tongji.baidu.com/" target="_blank" rel="noopener"><strong>百度统计</strong></a>，登录并进入<strong>网站列表</strong>，点击<strong>新增网站</strong>。以我的GitPage为例，填写新增网站表单，添加必要字段<strong>网站域名</strong>：eericzeng.github.io，<strong>网站首页</strong>：<a href="https://eericzeng.github.io，" target="_blank" rel="noopener">https://eericzeng.github.io，</a> <strong>网站名称</strong> 、<strong>行业类别</strong>选填。点击“确定”后，会出现包含如下信息的提示：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> _hmt = _hmt || [];</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> hm = <span class="built_in">document</span>.createElement(<span class="string">"script"</span>);</span><br><span class="line">  hm.src = <span class="string">"https://hm.baidu.com/hm.js?324a1c41343d123482f031976f9"</span>;</span><br><span class="line">  <span class="keyword">var</span> s = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"script"</span>)[<span class="number">0</span>];</span><br><span class="line">  s.parentNode.insertBefore(hm, s);</span><br><span class="line">&#125;)();</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>复制”<a href="https://hm.baidu.com/hm.js?&quot;" target="_blank" rel="noopener">https://hm.baidu.com/hm.js?&quot;</a> 后面的Id字符串，粘贴到主题配置文件中，如themes/next/_config.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Baidu Analytics ID</span></span><br><span class="line"><span class="attr">baidu_analytics:</span> <span class="number">324</span><span class="string">a1c41343d123482f031976f9</span></span><br></pre></td></tr></table></figure><h2 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h2><p>重新打包静态文件并发布：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>点击<strong>百度统计</strong>控制台<strong>，代码管理</strong>-&gt;<strong>代码安装检查</strong>进行安装校验。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;版本说明&quot;&gt;&lt;a href=&quot;#版本说明&quot; class=&quot;headerlink&quot; title=&quot;版本说明&quot;&gt;&lt;/a&gt;版本说明&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;hexo v3.9.0&lt;/li&gt;
&lt;li&gt;hexo-theme-next v7.1.2&lt;/li&gt;
&lt;/ul&gt;
&lt;
      
    
    </summary>
    
      <category term="hexo" scheme="http://eericzeng.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://eericzeng.github.io/tags/hexo/"/>
    
      <category term="阅读统计" scheme="http://eericzeng.github.io/tags/%E9%98%85%E8%AF%BB%E7%BB%9F%E8%AE%A1/"/>
    
      <category term="百度统计" scheme="http://eericzeng.github.io/tags/%E7%99%BE%E5%BA%A6%E7%BB%9F%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>hexo站内搜索</title>
    <link href="http://eericzeng.github.io/2019/07/14/hexo%E7%AB%99%E5%86%85%E6%90%9C%E7%B4%A2/"/>
    <id>http://eericzeng.github.io/2019/07/14/hexo站内搜索/</id>
    <published>2019-07-14T13:14:58.000Z</published>
    <updated>2019-07-15T05:58:20.743Z</updated>
    
    <content type="html"><![CDATA[<h3 id="版本说明"><a href="#版本说明" class="headerlink" title="版本说明"></a>版本说明</h3><ul><li>hexo v3.9.0</li><li>hexo-theme-next v7.1.2</li></ul><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><p>安装 hexo-generator-searchdb，在站点的根目录下执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>编辑<strong>站点配置文件</strong>，新增以下内容到任意位置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">search.xml</span></span><br><span class="line"><span class="attr">  field:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">  format:</span> <span class="string">html</span></span><br><span class="line"><span class="attr">  limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure><p>编辑<strong>主题配置文件</strong>，启用本地搜索功能：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>执行如下命令进行本地展示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>参考<a href="https://theme-next.iissnan.com/third-party-services.html" target="_blank" rel="noopener">next官方说明</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;版本说明&quot;&gt;&lt;a href=&quot;#版本说明&quot; class=&quot;headerlink&quot; title=&quot;版本说明&quot;&gt;&lt;/a&gt;版本说明&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;hexo v3.9.0&lt;/li&gt;
&lt;li&gt;hexo-theme-next v7.1.2&lt;/li&gt;
&lt;/ul&gt;
&lt;
      
    
    </summary>
    
      <category term="hexo" scheme="http://eericzeng.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://eericzeng.github.io/tags/hexo/"/>
    
      <category term="search" scheme="http://eericzeng.github.io/tags/search/"/>
    
      <category term="站内搜索" scheme="http://eericzeng.github.io/tags/%E7%AB%99%E5%86%85%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客站点sitemap的使用</title>
    <link href="http://eericzeng.github.io/2019/07/14/hexo%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9sitemap%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://eericzeng.github.io/2019/07/14/hexo博客站点sitemap的使用/</id>
    <published>2019-07-14T10:48:58.000Z</published>
    <updated>2019-07-15T06:01:37.710Z</updated>
    
    <content type="html"><![CDATA[<h2 id="版本说明"><a href="#版本说明" class="headerlink" title="版本说明"></a>版本说明</h2><ul><li>hexo v3.9.0</li><li>hexo-theme-next v7.1.2</li></ul><h2 id="启用sitemap功能"><a href="#启用sitemap功能" class="headerlink" title="启用sitemap功能"></a>启用sitemap功能</h2><p>为了让博文被google或百度检索，需要使用hexo的sitemap功能。修改themes/next/_config.yml：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line"><span class="attr">  home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">home</span></span><br><span class="line">  <span class="comment">#about: /about/ || user</span></span><br><span class="line"><span class="attr">  tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">  categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">th</span></span><br><span class="line"><span class="attr">  archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">archive</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || calendar</span></span><br><span class="line"><span class="attr">  sitemap:</span> <span class="string">/sitemap.xml</span> <span class="string">||</span> <span class="string">sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || heartbeat</span></span><br></pre></td></tr></table></figure><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>切换到hexo根目录下，安装搜索引擎插件，插件根据自己的需要安装其中一个或者都安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure><p>如何此时你跟我一样使用的是next主题，直接执行如下命令即可访问站点地图：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>此时，在public的静态文件根目录中会多出一个sitemap.xml文件，表示谷歌检索的sitemap安装成功。</p><h2 id="谷歌检索"><a href="#谷歌检索" class="headerlink" title="谷歌检索"></a>谷歌检索</h2><h3 id="检测网站是否被检索"><a href="#检测网站是否被检索" class="headerlink" title="检测网站是否被检索"></a>检测网站是否被检索</h3><p>以GitHub Pages为例，新建的GitHub Pages是没有被谷歌检索的。在谷歌搜索栏中输入如下信息进行检索：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">site: xxx.github.io</span><br></pre></td></tr></table></figure><p>xxx为你的GitHub账号，如果没有被检索，不会显示hexo中的任何博文，如果有下面的步骤就可以省略了。</p><h3 id="验证站点"><a href="#验证站点" class="headerlink" title="验证站点"></a>验证站点</h3><p>需要谷歌账号，没有的可以申请一个。登录<a href="https://www.google.com/webmasters/tools" target="_blank" rel="noopener">GoogleSearchConsole</a>，点击立即使用，输入需要验证所有权的网站地址，例如本站地址</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://eericzeng.github.io</span><br></pre></td></tr></table></figure><p>对于hexo博客网站，最好使用<strong>HTML标记</strong>法验证网站所有权，复制Google给的标记内容粘贴到themes/next/layout/_partials/head/head.swig文件meta标签最后面。这里使用的是next主题，其他主题类似。然后生成静态文件并发布：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>回到谷歌搜索控制台继续进行验证，点击<strong>完成</strong>。</p><h3 id="添加sitemap-xml"><a href="#添加sitemap-xml" class="headerlink" title="添加sitemap.xml"></a>添加sitemap.xml</h3><p>打开谷歌控制台选择上一步添加的网站-&gt;<strong>索引</strong>-&gt;<strong>站点地图</strong>，在添加新的站点地图中填入”sitemap.xml”即可，添加成功会在<strong>已提交的站点地图</strong>中显示，过一段时间在<strong>概述</strong>中会显示被索引的情况。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol><li><a href="https://jactor-sue.github.io/zh-CN/how-blog-on-githubpages-can-be-searched-by-google/" target="_blank" rel="noopener">让Google搜索到搭建在Github Pages上的博客</a></li><li><a href="https://www.jianshu.com/p/9c2d6db2f855" target="_blank" rel="noopener">生成sitemap站点地图</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;版本说明&quot;&gt;&lt;a href=&quot;#版本说明&quot; class=&quot;headerlink&quot; title=&quot;版本说明&quot;&gt;&lt;/a&gt;版本说明&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;hexo v3.9.0&lt;/li&gt;
&lt;li&gt;hexo-theme-next v7.1.2&lt;/li&gt;
&lt;/ul&gt;
&lt;
      
    
    </summary>
    
      <category term="hexo" scheme="http://eericzeng.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://eericzeng.github.io/tags/hexo/"/>
    
      <category term="sitemap" scheme="http://eericzeng.github.io/tags/sitemap/"/>
    
      <category term="检索" scheme="http://eericzeng.github.io/tags/%E6%A3%80%E7%B4%A2/"/>
    
      <category term="搜索引擎" scheme="http://eericzeng.github.io/tags/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/"/>
    
      <category term="google search" scheme="http://eericzeng.github.io/tags/google-search/"/>
    
      <category term="seo" scheme="http://eericzeng.github.io/tags/seo/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客系统分类和标签的使用</title>
    <link href="http://eericzeng.github.io/2019/07/14/hexo%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F%E5%88%86%E7%B1%BB%E5%92%8C%E6%A0%87%E7%AD%BE%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://eericzeng.github.io/2019/07/14/hexo博客系统分类和标签的使用/</id>
    <published>2019-07-14T09:45:53.000Z</published>
    <updated>2019-07-15T05:56:36.855Z</updated>
    
    <content type="html"><![CDATA[<h2 id="版本说明"><a href="#版本说明" class="headerlink" title="版本说明"></a>版本说明</h2><ul><li>hexo v3.9.0</li><li>hexo-theme-next v7.1.2</li></ul><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>以next主题为例，修改主题的配置文件themes/next/_config.yml，生效分类和标签：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line"><span class="attr">  home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">home</span></span><br><span class="line">  <span class="comment">#about: /about/ || user</span></span><br><span class="line"><span class="attr">  tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">  categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">th</span></span><br><span class="line"><span class="attr">  archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">archive</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || calendar</span></span><br><span class="line">  <span class="comment"># sitemap: /sitemap.xml || sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || heartbeat</span></span><br></pre></td></tr></table></figure><p>新创建的hexo博客没有分类和标签，点击分类或标签会提示”Cannot GET /categories/“和”Cannot GET /tags/“。</p><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>进入hexo博客所在的根目录，输入如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p>成功后提示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO  Created: HEXO_ROOT\<span class="built_in">source</span>\categories\index.md</span><br></pre></td></tr></table></figure><p>index.md的内容如下：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2019-07-14 17:51:10</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>这个index.md可以认为是存放分类的一个文档，只是type不同。修改为如下内容：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: 2019-07-14 17:51:10</span><br><span class="line">type: "categories"</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>找到source/_posts路径下的markdown文章，并修改其categories属性。以hexo自带的hexo-world.md为例，文件头修改为：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">date: 2019-06-28 22:36:00</span><br><span class="line">categories: hexo</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>此时，点击菜单栏中的“分类”，即可看到新建的“hexo”分类。</p><h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><p>标签创建与分类类似，在控制台中输入如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br><span class="line">INFO  Created: HEXO_ROOT\<span class="built_in">source</span>\tags\index.md</span><br></pre></td></tr></table></figure><p>tags/index.md内容与分类类似，修改为如下内容：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2019-07-14 18:19:31</span><br><span class="line">type: "tags"</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>同样在hello-world.md增加标签内容：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">date: 2019-06-28 22:36:00</span><br><span class="line">categories: hexo</span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">  - </span>hexo</span><br><span class="line"><span class="bullet">  - </span>others</span><br><span class="line">---</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;版本说明&quot;&gt;&lt;a href=&quot;#版本说明&quot; class=&quot;headerlink&quot; title=&quot;版本说明&quot;&gt;&lt;/a&gt;版本说明&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;hexo v3.9.0&lt;/li&gt;
&lt;li&gt;hexo-theme-next v7.1.2&lt;/li&gt;
&lt;/ul&gt;
&lt;
      
    
    </summary>
    
      <category term="hexo" scheme="http://eericzeng.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://eericzeng.github.io/tags/hexo/"/>
    
      <category term="tags" scheme="http://eericzeng.github.io/tags/tags/"/>
    
      <category term="categories" scheme="http://eericzeng.github.io/tags/categories/"/>
    
      <category term="next" scheme="http://eericzeng.github.io/tags/next/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot使用@Value读取.properties中文乱码及解决方法</title>
    <link href="http://eericzeng.github.io/2019/06/29/SpringBoot%E4%BD%BF%E7%94%A8@Value%E8%AF%BB%E5%8F%96.properties%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>http://eericzeng.github.io/2019/06/29/SpringBoot使用@Value读取.properties中文乱码及解决方法/</id>
    <published>2019-06-29T13:36:00.000Z</published>
    <updated>2019-07-14T10:30:32.168Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题重现"><a href="#问题重现" class="headerlink" title="问题重现"></a>问题重现</h2><p>某不知名springboot小项目，application.properties文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">custom.param=中文属性值</span><br></pre></td></tr></table></figure><p>java代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;custom.param&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String param;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        SpringApplication.run(Application.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostConstruct</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printText</span><span class="params">()</span> <span class="keyword">throws</span> UnsupportedEncodingException </span>&#123;</span><br><span class="line">        System.out.println(param);</span><br><span class="line">        System.out.println(<span class="keyword">new</span> String(param.getBytes(StandardCharsets.ISO_8859_1), StandardCharsets.UTF_8));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>控制台输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ä¸­æå±æ§å¼</span><br><span class="line">中文属性值</span><br></pre></td></tr></table></figure><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>先写结论：用@Value注解读取application.properties文件时，编码默认是ISO-8859-1，所以直接配置中文一定会乱码。注意，配置文件是springboot默认的配置文件application.properties或application-{active}.properties。其他配置文件会在<a href="#原因分析"><strong>原因分析</strong></a>中进行详解，原因分析涉及大量源码解读，如果不想烧脑深入分析的话可以直接跳到<a href="#解决方案"><strong>解决方案</strong></a>一节。</p><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>写本文时，我查了网上几乎所有关于@Value读取.properties中文乱码的文章。一种思路是修改编码格式；另外一种是利用插件/IDE将中文预先编码，在注入到变量后直接转码为所需要的中文。遇到中文乱码修改编码方式是常规思路，所以第一种思路看似没问题，但是把springboot所有关于encoding的配置参数修改为UTF-8后，中文乱码的问题依然没有解决。</p><h2 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h2><blockquote><p>Spring Boot版本：2.1.1.RELEASE</p></blockquote><ul><li>application.properties采用ISO-8859-1加载</li><li>自定义test.properties可以设置编码格式</li><li>.yml/.yaml默认采用UTF-8加载</li></ul><h3 id="application-properties文件加载"><a href="#application-properties文件加载" class="headerlink" title="application.properties文件加载"></a>application.properties文件加载</h3><p>正如前文所述读取配置文件时，编码出现了问题。追踪一下spring boot是加载默认配置文件的过程，会发现org.springframework.boot.contex.config.ConfigFileApplicationListener类的loadDocuments()方法，源码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> List&lt;Document&gt; <span class="title">loadDocuments</span><span class="params">(PropertySourceLoader loader, String name, Resource resource)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    DocumentsCacheKey cacheKey = <span class="keyword">new</span> DocumentsCacheKey(loader, resource);</span><br><span class="line">    List&lt;Document&gt; documents = <span class="keyword">this</span>.loadDocumentsCache.get(cacheKey);</span><br><span class="line">    <span class="keyword">if</span> (documents == <span class="keyword">null</span>) &#123;</span><br><span class="line">        List&lt;PropertySource&lt;?&gt;&gt; loaded = loader.load(name, resource);</span><br><span class="line">        documents = asDocuments(loaded);</span><br><span class="line">        <span class="keyword">this</span>.loadDocumentsCache.put(cacheKey, documents);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> documents;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>入参loader的类型是PropertySourceLoader，PropertySourceLoader是加载属性文件的接口，其实现有两个类：PropertiesPropertySourceLoader和YamlPropertySourceLoader。loader根据传入参数的实例调用load()方法，此处我们讨论.properties文件，接口声明和properties加载实现如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*********属性文件加载接口**********/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PropertySourceLoader</span> </span>&#123;</span><br><span class="line">    String[] getFileExtensions();</span><br><span class="line">    List&lt;PropertySource&lt;?&gt;&gt; load(String name, Resource resource) <span class="keyword">throws</span> IOException;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*********properties文件加载实现**********/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PropertiesPropertySourceLoader</span> <span class="keyword">implements</span> <span class="title">PropertySourceLoader</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String XML_FILE_EXTENSION = <span class="string">".xml"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String[] getFileExtensions() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> String[] &#123; <span class="string">"properties"</span>, <span class="string">"xml"</span> &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;PropertySource&lt;?&gt;&gt; load(String name, Resource resource) <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        Map&lt;String, ?&gt; properties = loadProperties(resource);</span><br><span class="line">        <span class="keyword">if</span> (properties.isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">return</span> Collections.emptyList();</span><br><span class="line">        &#125;</span><br><span class="line">      <span class="keyword">return</span> Collections.singletonList(<span class="keyword">new</span> OriginTrackedMapPropertySource(name, properties));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@SuppressWarnings</span>(&#123; <span class="string">"unchecked"</span>, <span class="string">"rawtypes"</span> &#125;)</span><br><span class="line">  <span class="keyword">private</span> Map&lt;String, ?&gt; loadProperties(Resource resource) <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">      String filename = resource.getFilename();</span><br><span class="line">      <span class="keyword">if</span> (filename != <span class="keyword">null</span> &amp;&amp; filename.endsWith(XML_FILE_EXTENSION)) &#123;</span><br><span class="line">          <span class="keyword">return</span> (Map) PropertiesLoaderUtils.loadProperties(resource);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> OriginTrackedPropertiesLoader(resource).load();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过源码分析PropertiesPropertySourceLoader并不单纯的加载.properties文件，还包含.xml文件（似乎有违单一功能原则，不知道当初这样设计的初衷是啥）。顺着load()方法向下找-&gt;loadProperties(Resource)-&gt;OriginTrackedPropertiesLoader.load()-&gt;OriginTrackedPropertiesLoader.load(boolean)-&gt;OriginTrackedPropertiesLoader$CharacterReader(Resource)。<br>CharacterReader是OriginTrackedPropertiesLoader的内部静态类，而且只有一个构造函数，看看器构造参数就不难发现为啥application.properties是以ISO-8859-1编码加载的了：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">CharacterReader</span> <span class="keyword">implements</span> <span class="title">Closeable</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 其他代码省略</span></span><br><span class="line">    CharacterReader(Resource resource) <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">      <span class="keyword">this</span>.reader = <span class="keyword">new</span> LineNumberReader(<span class="keyword">new</span> InputStreamReader(</span><br><span class="line">          resource.getInputStream(), StandardCharsets.ISO_8859_1));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 其他代码省略</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也就是说不论application.properties文件被设置为哪种编码格式，最终还是以ISO-8859-1的编码格式进行加载。</p><h3 id="yml-yaml默认以UTF-8加载"><a href="#yml-yaml默认以UTF-8加载" class="headerlink" title="yml/yaml默认以UTF-8加载"></a>yml/yaml默认以UTF-8加载</h3><p>让我们再看看yml/yaml格式的文件，其加载由PropertySourceLoader接口的另外一个实例YamlPropertySourceLoader实现，即接口方法load()：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;PropertySource&lt;?&gt;&gt; load(String name, Resource resource) <span class="keyword">throws</span> IOException;</span><br></pre></td></tr></table></figure><p>追一下load()的底层实现，采用org.yaml.snakeyaml.reader.UnicodeReader的实例对yml/ymal文件进行加载，而UnicodeReader实例对文件的初始化方法init()实现如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (internalIn2 != <span class="keyword">null</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    Charset encoding;</span><br><span class="line">    <span class="keyword">byte</span> bom[] = <span class="keyword">new</span> <span class="keyword">byte</span>[BOM_SIZE];</span><br><span class="line">    <span class="keyword">int</span> n, unread;</span><br><span class="line">    n = internalIn.read(bom, <span class="number">0</span>, bom.length);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((bom[<span class="number">0</span>] == (<span class="keyword">byte</span>) <span class="number">0xEF</span>) &amp;&amp; (bom[<span class="number">1</span>] == (<span class="keyword">byte</span>) <span class="number">0xBB</span>) &amp;&amp; (bom[<span class="number">2</span>] == (<span class="keyword">byte</span>) <span class="number">0xBF</span>)) &#123;</span><br><span class="line">        encoding = UTF8;</span><br><span class="line">        unread = n - <span class="number">3</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> ((bom[<span class="number">0</span>] == (<span class="keyword">byte</span>) <span class="number">0xFE</span>) &amp;&amp; (bom[<span class="number">1</span>] == (<span class="keyword">byte</span>) <span class="number">0xFF</span>)) &#123;</span><br><span class="line">        encoding = UTF16BE;</span><br><span class="line">        unread = n - <span class="number">2</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> ((bom[<span class="number">0</span>] == (<span class="keyword">byte</span>) <span class="number">0xFF</span>) &amp;&amp; (bom[<span class="number">1</span>] == (<span class="keyword">byte</span>) <span class="number">0xFE</span>)) &#123;</span><br><span class="line">        encoding = UTF16LE;</span><br><span class="line">        unread = n - <span class="number">2</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Unicode BOM mark not found, unread all bytes</span></span><br><span class="line">        encoding = UTF8;</span><br><span class="line">        unread = n;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (unread &gt; <span class="number">0</span>)</span><br><span class="line">        internalIn.unread(bom, (n - unread), unread);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Use given encoding</span></span><br><span class="line">    CharsetDecoder decoder = encoding.newDecoder().onUnmappableCharacter(</span><br><span class="line">            CodingErrorAction.REPORT);</span><br><span class="line">    internalIn2 = <span class="keyword">new</span> InputStreamReader(internalIn, decoder);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>每次调用read()读文件时都会调用init()方法进行初始化，也就是这个时候确定文件的编码格式。首先读取BOM（Byte Order Mark）文件头信息，如果头信息中有UTF8/UTF16BE/UTF16LE就采用对应的编码，没有或者不是则采用UTF8编码。</p><h3 id="自定义test-properties文件编码"><a href="#自定义test-properties文件编码" class="headerlink" title="自定义test.properties文件编码"></a>自定义test.properties文件编码</h3><p>采用@PropertySource(value=”classpath:test.properties”, encoding=”UTF-8”)方式读取配置文件可按照UTF-8的方式读取编码，而不是ISO-8859-1。@PropertySource配置的加载文件由ConfigurationClassParser.processPropertySource()进行解析，EncodedResource类决定最后由哪种编码格式加载文件，其方法如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Reader <span class="title">getReader</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.charset != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> InputStreamReader(<span class="keyword">this</span>.resource.getInputStream(), <span class="keyword">this</span>.charset);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>.encoding != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> InputStreamReader(<span class="keyword">this</span>.resource.getInputStream(), <span class="keyword">this</span>.encoding);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> InputStreamReader(<span class="keyword">this</span>.resource.getInputStream());</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>所以，虽然都是.properties文件，但是编码格式却是不一样的。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><ul><li>自定义配置文件</li><li>使用yml/yaml配置文件</li><li>IDE/插件预编码</li></ul><h3 id="自定义配置文件"><a href="#自定义配置文件" class="headerlink" title="自定义配置文件"></a>自定义配置文件</h3><p>通过@PropertySource(value=”classpath:my.properties”, encoding=”UTF-8”)注解配置自定义文件，注意文件名不能是springboot默认的application.properties文件名称。</p><h3 id="使用yml-yaml配置文件"><a href="#使用yml-yaml配置文件" class="headerlink" title="使用yml/yaml配置文件"></a>使用yml/yaml配置文件</h3><p>将yml/yaml文件设置为UTF-8的编码格式，springboot读该文件即采用UTF-8编码。</p><h3 id="IDE-插件预编码"><a href="#IDE-插件预编码" class="headerlink" title="IDE/插件预编码"></a>IDE/插件预编码</h3><p>采用编译器或者插件将配置文件预编码。这种方法我没试过，但是想想也知道这是很反人类的。如果有人感兴趣的话，可以参考一下<a href="https://blog.csdn.net/m0_37995707/article/details/77506184" title="Spring Boot自定义属性以及乱码问题" target="_blank" rel="noopener">这篇博客最后一部分IDEA/eclipse的修改操作</a>。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在配置application.properties时，都是开发比较重要的参数，尽量使用英文，业务相关的中文配置还是不要放到这里。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题重现&quot;&gt;&lt;a href=&quot;#问题重现&quot; class=&quot;headerlink&quot; title=&quot;问题重现&quot;&gt;&lt;/a&gt;问题重现&lt;/h2&gt;&lt;p&gt;某不知名springboot小项目，application.properties文件：&lt;/p&gt;
&lt;figure class=
      
    
    </summary>
    
      <category term="SpringBoot" scheme="http://eericzeng.github.io/categories/SpringBoot/"/>
    
    
      <category term="SpringBoot" scheme="http://eericzeng.github.io/tags/SpringBoot/"/>
    
      <category term="@Value" scheme="http://eericzeng.github.io/tags/Value/"/>
    
      <category term="properties" scheme="http://eericzeng.github.io/tags/properties/"/>
    
      <category term="utf-8" scheme="http://eericzeng.github.io/tags/utf-8/"/>
    
      <category term="编码" scheme="http://eericzeng.github.io/tags/%E7%BC%96%E7%A0%81/"/>
    
      <category term="乱码" scheme="http://eericzeng.github.io/tags/%E4%B9%B1%E7%A0%81/"/>
    
      <category term="yaml" scheme="http://eericzeng.github.io/tags/yaml/"/>
    
      <category term="yml" scheme="http://eericzeng.github.io/tags/yml/"/>
    
      <category term="spring" scheme="http://eericzeng.github.io/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://eericzeng.github.io/2019/06/28/hello-world/"/>
    <id>http://eericzeng.github.io/2019/06/28/hello-world/</id>
    <published>2019-06-28T14:36:00.000Z</published>
    <updated>2019-07-14T10:25:53.372Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
      <category term="hexo" scheme="http://eericzeng.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://eericzeng.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
